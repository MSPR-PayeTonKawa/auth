kind: pipeline
type: kubernetes
name: Authentification

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy
    image: alpine/k8s:1.20.2
    environment:
      KUBERNETES_SERVER:
        from_secret: kubernetes_server
      KUBERNETES_CERTIFICATE_AUTHORITY:
        from_secret: kubernetes_certificate_authority
      KUBERNETES_CLIENT_CERTIFICATE:
        from_secret: kubernetes_client_certificate
      KUBERNETES_CLIENT_KEY:
        from_secret: kubernetes_client_key
    commands:
      - echo $KUBERNETES_CERTIFICATE_AUTHORITY > /tmp/ca.crt
      - echo $KUBERNETES_CLIENT_CERTIFICATE > /tmp/client.crt
      - echo $KUBERNETES_CLIENT_KEY > /tmp/client.key
      - kubectl config set-cluster default-cluster --server=$KUBERNETES_SERVER --certificate-authority=/tmp/ca.crt
      - kubectl config set-credentials default-admin --client-certificate=/tmp/client.crt --client-key=/tmp/client.key
      - kubectl config set-context default-context --cluster=default-cluster --user=default-admin
      - kubectl config use-context default-context
      - helm repo add my-charts https://chartmuseum.germainleignel.com/
      - helm repo update
      - helm upgrade --install payetonkawa-staging my-charts/payetonkawa-chart -f ./k8s/values-staging.yaml --namespace payetonkawa-staging

  - name: sonarqube
    image: sonarsource/sonar-scanner-cli
    environment:
      SONAR_HOST_URL:
        from_secret: sonar_host
      SONAR_TOKEN:
        from_secret: sonar_token
    commands:
      - sonar-scanner -Dsonar.projectKey=MSPR-PayeTonKawa_auth_7d40a8c4-4ff5-4034-acaf-0226d044b7c0 -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN

  - name: test
    image: golang
    commands:
      - go test ./... -v

  - name: build-docker
    image: plugins/docker
    settings:
      username:
        from_secret: harbor_username
      password:
        from_secret: harbor_password
      repo: registry.germainleignel.com/paye-ton-kawa/auth
      registry: registry.germainleignel.com

  - name: msg-status
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: discord_id
      webhook_token:
        from_secret: discord_token
      message: "{{#success build.status}}✅{{else}}❌{{/success}}  Repository `[{{repo.name}}/{{commit.branch}}]` triggered by event `[{{uppercase build.event}}]` for build.\n    - Commit [[{{commit.sha}}]({{commit.link}})]\n    - Author `[{{commit.author}} / {{commit.email}}]`\n    - Message: {{commit.message}}    - Drone build [[#{{build.number}}]({{build.link}})] reported `[{{uppercase build.status}}]` at `[{{datetime build.finished \"2006.01.02 15:04\" \"\"}}]`\n"
    when:
      status: [success, failure, changed]

trigger:
  branch:
    - main

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: modules
        path: /lib/modules
      - name: cgroups
        path: /sys/fs/cgroup

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: modules
    host:
      path: /lib/modules
  - name: cgroups
    host:
      path: /sys/fs/cgroup
