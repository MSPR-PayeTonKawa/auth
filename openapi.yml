openapi: 3.0.0
info:
  title: Authentication Service API
  description: This API handles user authentication, token refresh, and token verification.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Development server
paths:
  /login:
    post:
      summary: Authenticate user and receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - password
              properties:
                user_id:
                  type: string
                  example: user1
                password:
                  type: string
                  example: pass123
      responses:
        200:
          description: Successfully authenticated and tokens returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        401:
          description: Authentication failed
        400:
          description: Bad request parameters
  /refresh:
    post:
      summary: Refresh access token using a refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        200:
          description: Successfully refreshed and new tokens returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        401:
          description: Invalid or expired refresh token
        400:
          description: Bad request parameters
  /verify:
    post:
      summary: Verify access token and return user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - access_token
              properties:
                access_token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        200:
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    example: "user1"
        401:
          description: Invalid or expired access token
        400:
          description: Bad request parameters
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
